/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.GovernmentBody;

import Model.EcoSystem;
import Model.EmailUtil.EmailUtil;
import Model.Enterprises.Enterprise;
import Model.WorkQueue.ConsignmentRequest;
import Model.WorkQueue.GovernmentOrganApproveRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aakrutighatole
 */
public class GovernmentAdminWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form GovernmentAdminWorkArea
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    Enterprise enterprise;
    
    public GovernmentAdminWorkArea(JPanel container, EcoSystem system, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=container;
        this.ecosystem=system;
        this.enterprise = enterprise;
        populateTable();
    }
    
    private void populateTable() {
    DefaultTableModel model = (DefaultTableModel) tblPendingRequests.getModel();
    model.setRowCount(0);

    // Iterate through the list and add each request to the table
    for (GovernmentOrganApproveRequest gov : enterprise.getNetwork().getWorkqueue().getGovernmentOrganApproveRequests()) {
        if (gov != null && gov.getOrganProcurement()!=null) {
            Object[] row = new Object[6];
            row[0] = gov;
            row[1] = gov.getOrganProcurement().getOrganRequest().getOrganName();
            row[2] = gov.getStatus();
            row[3] = gov.getRequestDate();
            row[4] = gov.getOrganProcurement().getOrganBank().getCountry();
            row[5] = gov.getOrganProcurement().getOrganRequest().getHospital().getCountry();
            model.addRow(row);
        } else {
            System.err.println("Null OrganRequest encountered.");
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPendingRequests = new javax.swing.JTable();
        btnApporve = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-businessman.png"))); // NOI18N
        jLabel1.setText("Customs Request from Organ Banks");

        tblPendingRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital", "Organ Bank", "Status", "Date", "Origin Country", "Provider Country"
            }
        ));
        jScrollPane1.setViewportView(tblPendingRequests);

        btnApporve.setText("Approve");
        btnApporve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApporveActionPerformed(evt);
            }
        });

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApporve, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApporve)
                    .addComponent(btnReject))
                .addContainerGap(124, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApporveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApporveActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblPendingRequests.getSelectedRow();
        
        if(selectedrow < 0){
            JOptionPane.showMessageDialog((this), "Please select row to approve request.");
            return;
        }
        
        GovernmentOrganApproveRequest gov = (GovernmentOrganApproveRequest) tblPendingRequests.getValueAt(selectedrow, 0);
        if(gov.isIsRejected()){
            JOptionPane.showMessageDialog((this), "Request has been rejected earlier.");
            return;
        }
        if(gov.isProcessed()){
            JOptionPane.showMessageDialog((this), "Request has been already processed.");
            return;
        }
        gov.setStatus("GOV - Approved");
        gov.setProcessed(true);
        ConsignmentRequest congiRequest = new ConsignmentRequest(gov);
        JOptionPane.showMessageDialog((this), "Request Approved.");
        enterprise.getNetwork().getWorkqueue().getConsignmentRequests().add(congiRequest);
        EmailUtil.sendEmail(gov.getOrganProcurement().getOrganRequest().getPatient().getEmail(), 
            "Organ Transplant Request Approved", 
            "Dear User,\n\nWe are pleased to inform you that your organ transplant request has been approved by the relevant government authorities. The process will now proceed, and the concerned organizations have been notified to take the next steps.\n\nWe wish you the best of health and will keep you updated on any further developments.\n\nBest regards,\nThe Government Health Department"
        );

        populateTable();
    }//GEN-LAST:event_btnApporveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblPendingRequests.getSelectedRow();
        
        if(selectedrow < 0){
            JOptionPane.showMessageDialog((this), "Please select a request to process.");
            return;
        }
        
        GovernmentOrganApproveRequest or = (GovernmentOrganApproveRequest) tblPendingRequests.getValueAt(selectedrow, 0);
        if(or.isProcessed()){
            JOptionPane.showMessageDialog((this), "Request has been already processed.");
            return;
        }
        if(or.isIsRejected()){
            JOptionPane.showMessageDialog((this), "Request has been rejected earlier.");
            return;
        }
        or.setStatus("Rejected by GOV" + "-" + enterprise.getName());
        or.setIsRejected(true);
        EmailUtil.sendEmail(or.getOrganProcurement().getOrganRequest().getPatient().getEmail(), 
            "Organ Transplant Request Rejected", 
            "Dear User,\n\nWe regret to inform you that your organ transplant request has been rejected by the relevant government authorities. Unfortunately, we are unable to proceed with the request due to current regulations and eligibility criteria.\n\nIf you have any questions or need further clarification, please do not hesitate to contact us.\n\nBest regards,\nThe Government Health Department"
        );

        populateTable();
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApporve;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPendingRequests;
    // End of variables declaration//GEN-END:variables
}
