/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.NGO;

import Model.EcoSystem;
import Model.EmailUtil.EmailUtil;
import Model.Enterprises.Enterprise;
import Model.WorkQueue.OrganProcurement;
import Model.WorkQueue.OrganRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aakrutighatole
 */
public class NGOAdminWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form NGOAdminWorkArea
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    
    public NGOAdminWorkArea(JPanel container, EcoSystem system,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=container;
        this.enterprise = enterprise;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPendingRequests = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnRaiseRequest = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        tblPendingRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient", "Organ", "Status", "Hospital", "Country of Request", "Date of Request"
            }
        ));
        jScrollPane1.setViewportView(tblPendingRequests);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-charity.png"))); // NOI18N
        jLabel1.setText("Organ Requests");

        btnRaiseRequest.setText("Forward to Organ Banks");
        btnRaiseRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaiseRequestActionPerformed(evt);
            }
        });

        jButton2.setText("Reject Request");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(482, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRaiseRequest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRaiseRequest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(141, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRaiseRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaiseRequestActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblPendingRequests.getSelectedRow();
        if(selectedrow < 0){
            JOptionPane.showMessageDialog((this), "Please select a request to process.");
            return;
        }
        OrganRequest or = (OrganRequest) tblPendingRequests.getValueAt(selectedrow, 0);
        if(or.isIsRejected()){
            JOptionPane.showMessageDialog((this), "Request has been rejected earlier.");
            return;
        }
        if(or.isProcessed()){
            JOptionPane.showMessageDialog((this), "Request has been already processed.");
            return;
        }
        OrganProcurement organProcurement = new OrganProcurement(or);
        or.setStatus("ORGAN BANK - Pending");
        or.setNGOEnterprise(enterprise);
        or.setProcessed(true);
        enterprise.getNetwork().getWorkqueue().getOrganProcurementRequest().add(organProcurement);
        EmailUtil.sendEmail(or.getPatient().getEmail(), 
            "Organ Bank Referral for Your Request", 
            "Dear User,\n\nWe are pleased to inform you that we have identified organ banks that can fulfill your request. Your request has been forwarded to them for further processing.\n\nYou will be notified as soon as we receive updates.\n\nBest regards,\nThe NGO Team"
        );

        JOptionPane.showMessageDialog(this, "Request forwarded to organ banks.");
        populateTable();
    }//GEN-LAST:event_btnRaiseRequestActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblPendingRequests.getSelectedRow();
        
        if(selectedrow < 0){
            JOptionPane.showMessageDialog((this), "Please select a request to process.");
            return;
        }
        
        OrganRequest or = (OrganRequest) tblPendingRequests.getValueAt(selectedrow, 0);
        if(or.isProcessed()){
            JOptionPane.showMessageDialog((this), "Request has been already processed.");
            return;
        }
        if(or.isIsRejected()){
            JOptionPane.showMessageDialog((this), "Request has been rejected earlier.");
            return;
        }
        or.setStatus("Rejected by NGO" + "-" + enterprise.getName());
        or.setIsRejected(true);
        
        EmailUtil.sendEmail(or.getPatient().getEmail(), 
            "Organ Request Update", 
            "Dear User,\n\nWe regret to inform you that, at this time, we have been unable to find suitable organ banks to fulfill your request. As a result, your request has been rejected for now.\n\nPlease feel free to reach out to us if you have any questions or need further assistance.\n\nBest regards,\nThe NGO Team"
        );

        populateTable();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRaiseRequest;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPendingRequests;
    // End of variables declaration//GEN-END:variables

   private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblPendingRequests.getModel();
        model.setRowCount(0);

        // Get the list of OrganRequests
        ArrayList<OrganRequest> wrq = enterprise.getNetwork().getWorkqueue().getOrganRequests();

        // Check if the list is null or empty
        if (wrq == null || wrq.isEmpty()) {
            System.err.println("No Organ Requests found.");
            return;
        }

        // Iterate through the list and add each request to the table
        for (OrganRequest or : wrq) {
            if (or != null) {
                Object[] row = new Object[6];
                row[0] = or;
                row[1] = or.getOrganName();
                row[2] = or.getStatus();
                row[3] = or.getHospital().getName();
                row[4] = or.getHospital().getCountry();
                row[5] = or.getRequestDate();
                model.addRow(row);
            } else {
                System.err.println("Null OrganRequest encountered.");
            }
        }
    }
}
