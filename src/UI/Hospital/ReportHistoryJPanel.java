/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Hospital;

import Model.EcoSystem;
import Model.EmailUtil.EmailUtil;
import Model.Enterprises.Enterprise;
import Model.Enterprises.Hospital;
import Model.WorkQueue.OrganRequest;
import Model.WorkQueue.PathologyTestRequest;
import Model.WorkQueue.WorkQueue;
import Model.WorkQueue.WorkRequest;
import Model.storage.Patient;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author apple
 */
public class ReportHistoryJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Hospital hospitalEnterprise;
    EcoSystem system;
    Patient patient;
    Enterprise enterprise;
    /**
     * Creates new form ReportHistoryJPanel
     */
    public ReportHistoryJPanel(JPanel userProcessContainer, EcoSystem system ,Patient patient, Hospital enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.hospitalEnterprise = enterprise;
        this.system = system;
        this.patient = patient;
        this.enterprise = enterprise;
        populateTable();
    }

     private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : hospitalEnterprise.getWorkQueue().getPathologyTestRequestsForAPatient(patient.getId())) {
                    PathologyTestRequest ptr = (PathologyTestRequest) workRequest;
                    Object[] row = new Object[5];
                    row[0] = workRequest;
                    row[1] = workRequest.getStatus();
                    row[2] = workRequest.getMessage();
                    row[3] = workRequest.getRequestDate();
                    row[4] = ptr.getResults();
                    model.addRow(row);   
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtOrgan = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnBack3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Sender", "Status", "Message", "Request Date", "Results"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Request Organ:");

        txtOrgan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrganActionPerformed(evt);
            }
        });

        jButton1.setText("Request Organ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnBack3.setText("Back");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-triangular_bandage.png"))); // NOI18N
        jLabel2.setText("Pathology Test Reports");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBack3))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(txtOrgan, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtOrgan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnBack3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 85, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String organ = txtOrgan.getText();
        int selectedrow = jTable1.getSelectedRow();
        
        if(selectedrow < 0){
            JOptionPane.showMessageDialog((this), "Please select a row");
            return;
        }
        
        
        
        PathologyTestRequest ptr = (PathologyTestRequest)jTable1.getValueAt(selectedrow, 0);
        
        
        if(ptr.getStatus().toLowerCase().equals("pending")){
            JOptionPane.showMessageDialog((this), "Can't request right now !!! status not approved");
            return;
        }
        
        Patient patient = ptr.getPatient();
        
        String bloodType = ptr.getBloodType();
        
        OrganRequest or = new OrganRequest(patient,bloodType,organ,hospitalEnterprise);

        WorkQueue networkWorkQueue = hospitalEnterprise.getNetwork().getWorkqueue();
        networkWorkQueue.getOrganRequests().add(or);

        EmailUtil.sendEmail(patient.getEmail(),
     "Organ Transplant Recommendation", 
        "Dear User,\n\nBased on your report history, the doctor has decided to proceed with an organ transplant. Your request has been passed on to multiple NGOs for further processing.\n\nBest regards,\nThe Medical Team"
            );

        JOptionPane.showMessageDialog((this), "Organ request has been placed successfully");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtOrganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrganActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtOrgan;
    // End of variables declaration//GEN-END:variables
}
