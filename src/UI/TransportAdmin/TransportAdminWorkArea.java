/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.TransportAdmin;

import Model.EcoSystem;
import Model.EmailUtil.EmailUtil;
import Model.Enterprises.Enterprise;
import Model.WorkQueue.ConsignmentRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aakrutighatole
 */
public class TransportAdminWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form TransportAdminWorkArea
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    Enterprise enterprise;
    public TransportAdminWorkArea(JPanel container, EcoSystem system,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=container;
        this.ecosystem=ecosystem;
        this.enterprise = enterprise;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        btnCreate = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-airplane_mode_on.png"))); // NOI18N
        jLabel1.setText("Shipment Requests");

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Organ Name", "Status", "Origin", "Destination"
            }
        ));
        jScrollPane1.setViewportView(tblRequests);

        btnCreate.setText("Mark Shipment");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnCreate))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblRequests.getSelectedRow();
        
        if(selectedrow < 0){
            JOptionPane.showMessageDialog((this), "Please select a valid row");
            return;
        }
        String txt = (String) tblRequests.getValueAt(selectedrow, 2);
        if(txt.equals("SHIPPED")){
            btnCreate.setEnabled(false);
            JOptionPane.showMessageDialog((this), "Request is already fullfilled");
            return;
        }
        
        ConsignmentRequest cr = (ConsignmentRequest)tblRequests.getValueAt(selectedrow, 0);
        cr.setStatus("SHIPPED");
        EmailUtil.sendEmail(cr.getGovernmentOrganApproveRequest().getOrganProcurement().getOrganRequest().getPatient().getEmail(), 
            "Delivery Confirmation â€“ Organ Transport Completed", 
            "Dear User,\n\nWe are pleased to inform you that the delivery has been successfully completed. The organ has been transported to the designated location as requested.\n\nThank you for choosing our services. Please do not hesitate to reach out if you need any further assistance.\n\nBest regards,\nThe Transport Company Team"
        );
        JOptionPane.showMessageDialog((this), "Shipment Marked Complete.");
        populateTable();
    }//GEN-LAST:event_btnCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequests;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
        model.setRowCount(0);

        // Get the list of OrganRequests
        ArrayList<ConsignmentRequest> wrq = enterprise.getNetwork().getWorkqueue().getConsignmentRequests();

        // Check if the list is null cng empty
        if (wrq == null || wrq.isEmpty()) {
            System.err.println("No Pending Requests found.");
            return;
        }

        // Iterate through the list and add each request to the table
        for (ConsignmentRequest cng : wrq) {
            if (cng != null) {
                Object[] row = new Object[6];
                row[0] = cng;
                row[1] = cng.getGovernmentOrganApproveRequest().getOrganProcurement().getOrganRequest().getOrganName();
                row[2] = cng.getStatus();
                row[4] = cng.getHospital().getCity() +"-"+cng.getHospital().getCountry();
                row[3] = cng.organBank().getCity() + "-" + cng.organBank().getCountry();
                model.addRow(row);
            } else {
                System.err.println("Null Consignments encountered.");
            }
        }
    }
}
